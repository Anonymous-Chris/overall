{"version":3,"sources":["components/features/Card.js","components/features/surveillance/OverallStationDetection.js","images/layout.png","components/features/Labels.js","components/features/surveillance/FloorHeatmap.js"],"names":["Card","props","useState","data","setData","useEffect","Slider","className","style","overflow","map","singleLog","index","background","marginRight","marginBottom","Object","entries","key","val","replaceAll","toUpperCase","OverallDetection","circledata","setCircleData","total","setTotal","detections","setDetections","fakedata","overallstationcircledata","overallstationtotal","overallstationdetections","Donut","title","metadata","name","displayLegend","Labels","Fragment","height","cx","cy","r","stroke","fill","color","x","y","FloorHeatmap","overallpositions","eachData","border","viewBox","xlinkHref","test","width","clipPath","length","item","position","keys","eachPosition","innerIndex","borderRadius","fontSize","OverallStationDetection"],"mappings":"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","file":"static/js/3.9279d123.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Slider from \"../functions/Slider\";\nconst Card = (props) => {\n  // get orientation too eihter vertical or horizontal\n  // console.log(props?.data[0]?.data);\n  const [data, setData] = useState({});\n  useEffect(() => {\n    setData(props?.data);\n    Slider()\n  }, [props]);\n  return (\n    <div className=\"card_dynamic\">\n        {data && (\n          <ul\n            className=\"m-0 p-0 d-flex w-100 camera-list flex-sm-column flex-column flex-md-row flex-lg-row\"\n            style={{ overflow: \"scroll\" }}\n          >\n            {data[0]?.data.map((singleLog, index) => (\n              <div\n                className=\"d-flex flex-column justify-content-center align-items-center p-3\"\n                key={index}\n                style={{\n                  background: \"#212224\",\n                  marginRight: \"10px\",\n                  marginBottom: '10px'\n                }}\n              >\n                {Object.entries(singleLog).map(([key, val]) => (\n                  <footer key={key}>\n                    <span className=\"\">\n                      {key?.replaceAll(\"_\", \" \").toUpperCase()}\n                    </span>{\" \"}\n                    :{\" \"}\n                    <span>\n                      {typeof val === \"string\" ? val?.toUpperCase() : val}\n                    </span>\n                  </footer>\n                ))}\n              </div>\n            ))}\n          </ul>\n        )}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useState, useEffect } from \"react\";\nimport Donut from \"../../graphs/chartjs/Donut\";\nimport fakedata from \"../../../fakedata\";\nimport Card from \"../Card\";\nconst OverallDetection = () => {\n  const [circledata, setCircleData] = useState({});\n  const [total,setTotal]=useState({})\n  const [detections,setDetections]=useState({})\n  useEffect(() => {\n    setCircleData(fakedata[0].overallstationcircledata);\n    setTotal(fakedata[0].overallstationtotal)\n    setDetections(fakedata[0].overallstationdetections)\n  }, []);\n  return (\n    <div className=\"overallstationdetection w-100 h-100 row m-0 p-0 text-center\">\n      {/* {console.log(circledata)} */}\n      <div className=\"col-12 col-sm-6 col-md-6 col-lg-8\">\n        {\" \"}\n        <div className=\"w-100 h-100\"><Card data={detections}/></div>\n      </div>\n      <div className=\"col-12 col-sm-6 col-md-6 col-lg-2\">\n        <div className=\"w-100\">\n          <Donut\n            title={circledata[0]?.metadata.name}\n            data={circledata[0]?.data}\n            displayLegend={circledata[0]?.displayLegend}\n          />\n        </div>\n      </div>\n      <div className=\"col-12 col-sm-6 col-md-6 col-lg-2\">\n        {\" \"}\n        <div className=\"w-100 h-100\"><Card data={total}/></div>\n      </div>\n    </div>\n  );\n};\n\nexport default OverallDetection;\n","export default __webpack_public_path__ + \"static/media/layout.d4a41de5.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Labels = (props) => {\n  return (\n    <React.Fragment>\n      {props.name ? (\n        <svg height=\"16px\" className=\"\">\n          <circle cx={6} cy={6} r=\"6\" stroke=\"black\" fill={props.color} />\n          <text x=\"17\" y=\"12\" fill=\"white\">\n            {props.name}\n          </text>\n        </svg>\n      ) : (\n        <svg>\n          <circle cx={props.x} cy={props.y} r=\"1\" stroke={props.color} fill={props.color} />\n        </svg>\n      )}\n    </React.Fragment>\n  );\n};\n\nLabels.propTypes = {\n  color: PropTypes.string,\n};\nexport default Labels;\n","import React, { useState, useEffect } from \"react\";\nimport \"../../../css/floorheatmap.css\";\nimport OverallStationDetection from './OverallStationDetection'\nimport test from \"../../../images/layout.png\";\nimport Labels from \"../Labels\";\nimport fakedata from \"../../../fakedata\";\nconst FloorHeatmap = () => {\n  const [data, setData] = useState({});\n  useEffect(() => {\n    setData(fakedata[0]?.overallpositions);\n  }, []);\n\n  const returnPositions = (eachData) =>\n    eachData.map((item,index) => {\n      const position = item[Object.keys(item)][0].position;\n      const color = item[Object.keys(item)][0].color;\n      const eachPos = position.map((eachPosition, innerIndex) => (\n         <Labels key={index+innerIndex} x={eachPosition.x} y={eachPosition.y} color={color} />\n      ));\n      return eachPos;\n    });\n  return (\n    <div\n      className=\"floorheatmap w-100 h-100 text-white p-0 m-0\"\n      style={{ background: \"black\" }}\n    >\n      <div\n        className=\"h-75 w-100 p-1 mb-1 position-relative\"\n        style={{ background: \"rgb(22, 22, 25)\", border: \"1px solid white\" }}\n      >\n        <span>\n          <h3>Overall Detection Activity</h3>\n        </span>\n\n        <svg\n          className=\"\"\n          viewBox=\"0 0 300 100\"\n          style={{ height: \"100%\", overflow: \"visible\" }}\n        >\n          <image xlinkHref={test} width=\"100%\" clipPath=\"url(#mask1)\" />\n          {/* {data?.map(item=>returnPositions(item))} */}\n          {data.length > 0 ? returnPositions(data) : \"\"}\n        </svg>\n\n        <div\n          className=\"floorheatmap__labels position-absolute text-center start-25 bottom-0 p-1 mb-1\"\n          style={{\n            border: \"5px solid gray\",\n            background: \"#13181b\",\n            borderRadius: \"5px\",\n            height: \"10%\",\n            width: \"50%\",\n            fontSize: \"1rem\",\n          }}\n        >\n          <h5 className=\"mb-0\">Heat Map Key</h5>\n          <ul className=\"d-flex p-0 mb-0 w-100 \">\n            <li>\n              <Labels color={\"blue\"} name={\"Floor Operator\"} />{\" \"}\n            </li>\n            <li>\n              <Labels color={\"green\"} name={\"Floor Manager\"} />{\" \"}\n            </li>\n            <li>\n              <Labels color={\"red\"} name={\"Anonymous\"} />{\" \"}\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div\n        className=\"h-25 pt-1 p-1\"\n        style={{ background: \"rgb(22, 22, 25)\", border: \"1px solid white\" }}\n      >\n        <span>\n          <h3>Overall Station Detection</h3>\n        </span>\n        <div className=\"floorheatmap__station__detection w-100 h-100\">\n          <OverallStationDetection />{\" \"}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FloorHeatmap;\n"],"sourceRoot":""}